(ns beautyIsSymmetric)

;and(
;     and(
;          or(global:FMau:lincoln, author:lincoln), 
;          filter(bdl:1007527)), 
;     filter(meta.collection:or(MSTAR,Patents)))?
;

(def t1 '(:a 
           (:b nil nil) 
           (:b nil nil))); true)
(def t2 '(:a 
           (:b nil nil) 
           nil)); false)
(def t3  '(:a 
            (:b nil nil) 
            (:c nil nil))); false)
(def t4  [1 
          [2 nil 
           [3 
            [4 
             [5 nil nil] 
             [6 nil nil]
            ] 
            nil]]
          [2 
           [3 nil 
            [4 
             [6 nil nil] 
             [5 nil nil]]] 
           nil]]);   true)
(def t5  [1 [2 nil [3 [4 [5 nil nil] [6 nil nil]] nil]]
          [2 [3 nil [4 [5 nil nil] [6 nil nil]]] nil]]);   false)
(def t6  [1 [2 nil [3 [4 [5 nil nil] [6 nil nil]] nil]]
          [2 [3 nil [4 [6 nil nil] nil]] nil]]);   false)


(defn balanced[x]
  (loop [[v l r] x]
    (list (identity v)
          (if (identity l) (balanced l))
          (if (identity r) (balanced r)))))
       
(fn[x]
  (into {} (for [k (keys x)
                 k2 (keys (get x k))]
             [[k k2] (get-in x [k k2])]))
  
  
(fn bt[x]
  (if (coll? x)
    (let [[v l r] x]
      (and (= (count x) 3) (bt l) (bt r)))
    (nil? x)))
    
(bix t1)
(bix t2)
(bix t3)
(bix t4)
(bix t5)
(bix t6)
   
